version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-server
    ports:
      - "6333:6333"  # REST API端口
      - "6334:6334"  # gRPC端口
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rag-network

  rag-app:
    build: .
    container_name: rag-knowledge-base
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./rag_system.db:/app/rag_system.db
    environment:
      - FLASK_ENV=production
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OLLAMA_HOST=host.docker.internal  # 访问宿主机的Ollama服务
      - OLLAMA_PORT=11434
      - OLLAMA_EMBEDDING_MODEL=shaw/dmeta-embedding-zh:latest
      - OLLAMA_CHAT_MODEL=qwen2.5:14b
    depends_on:
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - rag-network

volumes:
  qdrant_storage:
    driver: local

networks:
  rag-network:
    driver: bridge